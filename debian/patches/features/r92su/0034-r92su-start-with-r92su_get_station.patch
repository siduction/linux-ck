From b92095fb139beaef8cc4fb41dfe0ead7f1b32488 Mon Sep 17 00:00:00 2001
From: Christian Lamparter <chunkeey@googlemail.com>
Date: Tue, 9 Apr 2013 17:57:52 +0200
Subject: [PATCH 34/65] r92su: start with r92su_get_station

Implement get_station for iw link and friends.

Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
---
 r92su/event.c |  8 ++++----
 r92su/hw.c    | 11 ++++++++++-
 r92su/main.c  | 18 +++++++++++++-----
 r92su/sta.c   | 20 +++++++++++++++++++-
 r92su/sta.h   | 11 ++++++++++-
 5 files changed, 56 insertions(+), 12 deletions(-)

--- a/drivers/net/wireless/r92su/event.c
+++ b/drivers/net/wireless/r92su/event.c
@@ -108,11 +108,11 @@ static void c2h_add_sta_event(struct r92
 	struct r92su_sta *new_sta;
 	unsigned int id = le32_to_cpu(addsta->aid);
 
-	new_sta = r92su_sta_alloc(r92su, addsta->mac_addr, id, GFP_ATOMIC);
-	if (new_sta) {
-		new_sta->aid = le32_to_cpu(addsta->aid);
+	new_sta = r92su_sta_alloc(r92su, addsta->mac_addr, id,
+				  le32_to_cpu(addsta->aid),
+				  GFP_ATOMIC);
+	if (new_sta)
 		r92su_sta_replace(r92su, new_sta);
-	}
 }
 
 static void c2h_del_sta_event(struct r92su *r92su, const struct h2cc2h *c2h)
--- a/drivers/net/wireless/r92su/hw.c
+++ b/drivers/net/wireless/r92su/hw.c
@@ -485,8 +485,17 @@ static void r92su_query_fw_rx_phy_status
 
 		rcu_read_lock();
 		bss = rcu_dereference(r92su->connect_bss);
-		if (bss)
+		if (bss) {
+			struct r92su_bss_priv *bss_priv;
+			struct r92su_sta *sta;
+
 			bss->signal = qual;
+
+			bss_priv = r92su_get_bss_priv(bss);
+			sta = rcu_dereference(bss_priv->sta);
+			if (sta)
+				sta->signal = qual;
+		}
 		rcu_read_unlock();
 	}
 }
--- a/drivers/net/wireless/r92su/main.c
+++ b/drivers/net/wireless/r92su/main.c
@@ -127,13 +127,22 @@ static int r92su_get_station(struct wiph
 			     u8 *mac, struct station_info *sinfo)
 {
 	struct r92su *r92su = wiphy_priv(wiphy);
-	int err = -EAGAIN;
+	struct r92su_sta *sta;
+	int err = -ENOENT;
 
 	mutex_lock(&r92su->lock);
-	if (!r92su_is_connected(r92su))
+	if (!r92su_is_connected(r92su)) {
+		err = -ENODEV;
 		goto out;
+	}
 
-	err = -EOPNOTSUPP;
+	rcu_read_lock();
+	sta = r92su_sta_get(r92su, mac);
+	if (sta) {
+		r92su_sta_set_sinfo(r92su, sta, sinfo);
+		err = 0;
+	}
+	rcu_read_unlock();
 
 out:
 	mutex_unlock(&r92su->lock);
@@ -596,14 +605,13 @@ static void r92su_bss_connect_work(struc
 
 		sta = r92su_sta_alloc(r92su, join_bss->bss.bssid,
 			5 /* seems like the FW has this hardcoded */,
-			GFP_KERNEL);
+			le32_to_cpu(join_bss->aid), GFP_KERNEL);
 		if (!sta)
 			goto report_cfg80211;
 
 		resp_ie = join_bss->bss.ies.ie;
 		resp_ie_len = le32_to_cpu(join_bss->bss.ie_length) - 12;
 
-		sta->aid = le32_to_cpu(join_bss->aid);
 		sta->enc_sta = le32_to_cpu(join_bss->bss.privacy) ?
 			       true : false;
 		sta->qos_sta = r92su_parse_wmm_cap_ie(r92su, resp_ie,
--- a/drivers/net/wireless/r92su/sta.c
+++ b/drivers/net/wireless/r92su/sta.c
@@ -127,19 +127,25 @@ void r92su_sta_alloc_tid(struct r92su *r
 
 struct r92su_sta *r92su_sta_alloc(struct r92su *r92su, const u8 *mac_addr,
 				  const unsigned int mac_id,
-				  const gfp_t flag)
+				  const unsigned int aid, const gfp_t flag)
 {
 	struct r92su_sta *sta;
 
 	sta = kzalloc(sizeof(*sta), flag);
 	if (sta) {
+		struct timespec uptime;
 		int i;
+
 		for (i = 0; i < ARRAY_SIZE(sta->defrag); i++)
 			skb_queue_head_init(&sta->defrag[i].queue);
 
 		if (mac_addr)
 			memcpy(sta->mac_addr, mac_addr, ETH_ALEN);
 		sta->mac_id = mac_id;
+		sta->aid = aid;
+
+		do_posix_clock_monotonic_gettime(&uptime);
+	        sta->last_connected = uptime.tv_sec;
 	}
 	return sta;
 }
@@ -263,3 +269,15 @@ void r92su_key_free(struct r92su_key *ke
 	if (key)
 		kfree_rcu(key, rcu_head);
 }
+
+void r92su_sta_set_sinfo(struct r92su *r92su, struct r92su_sta *sta,
+			 struct station_info *sinfo)
+{
+	struct timespec uptime;
+	sinfo->filled = STATION_INFO_CONNECTED_TIME |
+			STATION_INFO_SIGNAL;
+
+        do_posix_clock_monotonic_gettime(&uptime);
+        sinfo->connected_time = uptime.tv_sec - sta->last_connected;
+	sinfo->signal = sta->signal;
+}
--- a/drivers/net/wireless/r92su/sta.h
+++ b/drivers/net/wireless/r92su/sta.h
@@ -120,6 +120,10 @@ struct r92su_sta {
 	bool ht_sta;
 	bool enc_sta;
 
+	long last_connected;
+
+	int signal;
+
 	/* deduplication */
 	__le16 rx_seq;
 	__le16 rx_seq_tid[IEEE80211_NUM_TIDS];
@@ -134,7 +138,9 @@ struct r92su_sta {
 };
 
 struct r92su_sta *r92su_sta_alloc(struct r92su *r92su, const u8 *mac_addr,
-				  const unsigned int mac_id, const gfp_t flag);
+				  const unsigned int mac_id,
+				  const unsigned int aid,
+				  const gfp_t flag);
 
 void r92su_sta_replace(struct r92su *r92su, struct r92su_sta *new_sta);
 
@@ -149,6 +155,9 @@ void r92su_key_free(struct r92su_key *ke
 
 void r92su_sta_add(struct r92su *r92su, struct r92su_sta *new_sta);
 
+void r92su_sta_set_sinfo(struct r92su *r92su, struct r92su_sta *sta,
+			 struct station_info *sinfo);
+
 /* the following functions need rcu_read_lock! */
 struct r92su_sta *r92su_sta_get(struct r92su *r92su, const u8 *mac_addr);
 void r92su_sta_del(struct r92su *r92su, int mac_id);
