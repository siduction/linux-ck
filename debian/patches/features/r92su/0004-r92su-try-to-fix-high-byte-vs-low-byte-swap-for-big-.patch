From e4ae9bb5320c2ba525e0c62d11135867698752ed Mon Sep 17 00:00:00 2001
From: Christian Lamparter <chunkeey@googlemail.com>
Date: Thu, 28 Mar 2013 21:17:48 +0100
Subject: [PATCH 04/65] r92su: try to fix high byte vs low byte swap for big
 endian system
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

José Vázquez reported a issue with r92su. The usbmon
log he sent me did reveal that the address bytes are
swapped on big endian architectures.

(Big Endian)
Ci: s c0 05 0400 0000 0004 4 <
Ci: s c0 05 0a00 0000 0001 1 <

vs.

(Little Endian)
Ci: s c0 05 0004 0000 0004 4 <
Ci: s c0 05 000a 0000 0001 1 <

Reported-by: José Vázquez <ppvazquezfer@gmail.com>
Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
---
 r92su/usb.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/r92su/usb.c
+++ b/drivers/net/wireless/r92su/usb.c
@@ -62,7 +62,7 @@ static int r92su_sync_write(struct r92su
 	return (ret < 0) ? ret : ((ret == size) ? 0 : -EMSGSIZE);
 }
 
-static int r92su_sync_read(struct r92su *r92su, __le16 address,
+static int r92su_sync_read(struct r92su *r92su, __u16 address,
 			   void *data, u16 size)
 {
 	struct usb_device *udev = r92su->udev;
@@ -92,7 +92,7 @@ static void r92su_read_helper(struct r92
 			      void *data, const u16 size)
 {
 	int ret;
-	ret = r92su_sync_read(r92su, cpu_to_le16(address), data, size);
+	ret = r92su_sync_read(r92su, address, data, size);
 	WARN_ONCE(ret, "unable to read %d bytes from address:0x%x (%d).",
 		      size, address, ret);
 
@@ -125,7 +125,7 @@ static void r92su_write_helper(struct r9
 			       const void *data, const u16 size)
 {
 	int ret;
-	ret = r92su_sync_write(r92su, cpu_to_le16(address), data, size);
+	ret = r92su_sync_write(r92su, address, data, size);
 	WARN_ONCE(ret, "unable to write %d bytes to address:0x%x (%d).",
 		size, address, ret);
 
