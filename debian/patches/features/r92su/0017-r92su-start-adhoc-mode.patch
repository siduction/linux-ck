From 03694fd071ad479489a9f14a708a6e13dbd2aa5e Mon Sep 17 00:00:00 2001
From: Christian Lamparter <chunkeey@googlemail.com>
Date: Sun, 24 Mar 2013 23:32:02 +0100
Subject: [PATCH 17/65] r92su: start adhoc mode

This patch adds some preliminary functions for ad-hoc mode.
---
 r92su/cmd.c  |  5 +++--
 r92su/cmd.h  |  2 +-
 r92su/main.c | 39 ++++++++++++++++++++++++++++++++++-----
 3 files changed, 38 insertions(+), 8 deletions(-)

--- a/drivers/net/wireless/r92su/cmd.c
+++ b/drivers/net/wireless/r92su/cmd.c
@@ -194,7 +194,7 @@ int r92su_h2c_disconnect(struct r92su *r
 }
 
 int r92su_h2c_connect(struct r92su *r92su, const struct h2cc2h_bss *orig_bss,
-		      const u8 *ie, const u32 ie_len)
+		      const bool join, const u8 *ie, const u32 ie_len)
 {
 	struct h2cc2h_bss *bss;
 	struct sk_buff *skb;
@@ -215,7 +215,8 @@ int r92su_h2c_connect(struct r92su *r92s
 	bss->length = cpu_to_le32(skb->len);
 	rest = H2CC2H_HDR_LEN - (skb->len % H2CC2H_HDR_LEN);
 	memset(skb_put(skb, rest), 0, rest);
-	return r92su_h2c_submit(r92su, skb, H2C_JOINBSS_CMD);
+	return r92su_h2c_submit(r92su, skb, join ? H2C_JOINBSS_CMD :
+		H2C_CREATEBSS_CMD);
 }
 
 static const u8 r92su_enc_alg_len[] = {
--- a/drivers/net/wireless/r92su/cmd.h
+++ b/drivers/net/wireless/r92su/cmd.h
@@ -58,7 +58,7 @@ int r92su_h2c_survey(struct r92su *r92su
 int r92su_h2c_disconnect(struct r92su *r92su);
 
 int r92su_h2c_connect(struct r92su *r92su, const struct h2cc2h_bss *bss,
-		      const u8 *ie, const u32 ie_len);
+		      const bool join, const u8 *ie, const u32 ie_len);
 
 int r92su_h2c_set_key(struct r92su *r92su, const enum r92su_enc_alg algo,
 		      const u8 key_id, const bool group_key,
--- a/drivers/net/wireless/r92su/main.c
+++ b/drivers/net/wireless/r92su/main.c
@@ -360,10 +360,12 @@ static int r92su_connect(struct wiphy *w
 		goto out;
 
 	r92su->want_connect_bss = bss;
-	err = r92su_h2c_connect(r92su, &bss_priv->fw_bss, ie_buf, ie - ie_buf);
+	err = r92su_h2c_connect(r92su, &bss_priv->fw_bss, true,
+				ie_buf, ie - ie_buf);
 	if (err)
 		goto out;
 
+	synchronize_rcu();
 out:
 	if (err) {
 		if (bss_priv)
@@ -572,15 +574,28 @@ static void r92su_connect_bss_work(struc
 		status = WLAN_STATUS_SUCCESS;
 
 		bss_priv->sta = sta;
-		rcu_assign_pointer(r92su->connect_bss, r92su->want_connect_bss);
+		rcu_assign_pointer(r92su->connect_bss, cfg_bss);
 		r92su->want_connect_bss = NULL;
 		r92su_set_state(r92su, R92SU_CONNECTED);
 	}
 
 report_cfg80211:
-	cfg80211_connect_result(r92su->wdev.netdev, join_bss->bss.bssid,
-		bss_priv->assoc_ie, bss_priv->assoc_ie_len,
-		resp_ie, resp_ie_len, status, GFP_KERNEL);
+	switch (r92su->wdev.iftype) {
+	case NL80211_IFTYPE_STATION:
+		cfg80211_connect_result(r92su->wdev.netdev,
+			join_bss->bss.bssid, bss_priv->assoc_ie,
+			bss_priv->assoc_ie_len, resp_ie, resp_ie_len,
+			status, GFP_KERNEL);
+		break;
+	case NL80211_IFTYPE_ADHOC:
+		cfg80211_ibss_joined(r92su->wdev.netdev, join_bss->bss.bssid,
+				     GFP_KERNEL);
+		break;
+
+	default:
+		WARN(1, "unsupported network type %d\n", r92su->wdev.iftype);
+		break;
+	}
 
 	kfree(bss_priv->assoc_ie);
 	bss_priv->assoc_ie = NULL;
@@ -878,6 +893,17 @@ static int r92su_set_wiphy_params(struct
 		return -EOPNOTSUPP;
 }
 
+static int r92su_join_ibss(struct wiphy *wiphy, struct net_device *ndev,
+			   struct cfg80211_ibss_params *params)
+{
+	return -EOPNOTSUPP;
+}
+
+static int r92su_leave_ibss(struct wiphy *wiphy, struct net_device *ndev)
+{
+	return r92su_disconnect(wiphy, ndev, WLAN_REASON_UNSPECIFIED);
+}
+
 static const struct cfg80211_ops r92su_cfg80211_ops = {
 	.change_virtual_intf = r92su_change_virtual_intf,
 	.set_monitor_channel = r92su_set_monitor_channel,
@@ -892,6 +918,9 @@ static const struct cfg80211_ops r92su_c
 	.connect = r92su_connect,
 	.disconnect = r92su_disconnect,
 
+	.join_ibss = r92su_join_ibss,
+	.leave_ibss = r92su_leave_ibss,
+
 	.set_wiphy_params = r92su_set_wiphy_params,
 };
 
