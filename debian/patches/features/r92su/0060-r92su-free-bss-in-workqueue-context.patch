From 20c165e0e25f5d072d3c763fcb42a261a9937e87 Mon Sep 17 00:00:00 2001
From: Christian Lamparter <chunkeey@googlemail.com>
Date: Sun, 28 Apr 2013 01:46:01 +0200
Subject: [PATCH 60/65] r92su: free bss in workqueue context
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This patch should fix warning which was triggered by:
WARNING: at kernel/softirq.c:160 local_bh_enable+0x48/0xa0()

This warning was triggered by cfg80211_put_bss in the
disconnect path, since it was called from an irq-context
[which is not allowed].

Reported-by: José Vázquez <ppvazquezfer@gmail.com>
Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
---
 r92su/main.c  | 16 ++++++++++++++--
 r92su/r92su.h |  1 +
 2 files changed, 15 insertions(+), 2 deletions(-)

--- a/drivers/net/wireless/r92su/main.c
+++ b/drivers/net/wireless/r92su/main.c
@@ -556,10 +556,20 @@ static int r92su_disconnect(struct wiphy
 /* called from irq-context */
 void r92su_disconnect_bss_event(struct r92su *r92su)
 {
-	r92su_bss_free_connected(r92su);
-
 	netif_tx_stop_all_queues(r92su->wdev.netdev);
 	netif_carrier_off(r92su->wdev.netdev);
+
+	queue_work(r92su->wq, &r92su->disconnect_work);
+}
+
+static void r92su_disconnect_work(struct work_struct *work)
+{
+	struct r92su *r92su;
+	r92su = container_of(work, struct r92su, disconnect_work);
+
+	mutex_lock(&r92su->lock);
+	r92su_bss_free_connected(r92su);
+	mutex_unlock(&r92su->lock);
 }
 
 static void r92su_bss_init(struct r92su *r92su, struct cfg80211_bss *bss,
@@ -1436,6 +1446,7 @@ static int r92su_stop(struct net_device
 	cancel_delayed_work_sync(&r92su->service_work);
 	cancel_work_sync(&r92su->add_bss_work);
 	cancel_work_sync(&r92su->connect_bss_work);
+	cancel_work_sync(&r92su->disconnect_work);
 
 	node = llist_del_all(&r92su->add_bss_list);
 	while (node) {
@@ -1564,6 +1575,7 @@ struct r92su *r92su_alloc(struct device
 	init_llist_head(&r92su->add_bss_list);
 	INIT_WORK(&r92su->add_bss_work, r92su_bss_add_work);
 	INIT_WORK(&r92su->connect_bss_work, r92su_bss_connect_work);
+	INIT_WORK(&r92su->disconnect_work, r92su_disconnect_work);
 	INIT_DELAYED_WORK(&r92su->survey_done_work, r92su_survey_done_work);
 	r92su_hw_init(r92su);
 
--- a/drivers/net/wireless/r92su/r92su.h
+++ b/drivers/net/wireless/r92su/r92su.h
@@ -174,6 +174,7 @@ struct r92su {
 	struct completion scan_done;
 	struct llist_head add_bss_list;
 	struct work_struct add_bss_work;
+	struct work_struct disconnect_work;
 	bool scanned;
 
 	/* eeprom / hw_info */
