From bd26df3ecf9aa4744e4ffb0170b2ca96e349af9e Mon Sep 17 00:00:00 2001
From: Christian Lamparter <chunkeey@googlemail.com>
Date: Sat, 6 Apr 2013 12:16:46 +0200
Subject: [PATCH 15/65] r92su: RX_STATUS_DESC -> RX_DESC

Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
---
 r92su/def.h | 100 ++++++++++++++++++++++++++++--------------------------------
 r92su/rx.c  |  36 +++++++++++-----------
 2 files changed, 65 insertions(+), 71 deletions(-)

--- a/drivers/net/wireless/r92su/def.h
+++ b/drivers/net/wireless/r92su/def.h
@@ -139,104 +139,98 @@
 #define SET_TX_DESC_CMD_SEQ(__pdesc, __val)			\
 	SET_BITS_OFFSET_LE(__pdesc, 7, 24, 7, __val)
 
+typedef __le32 tx_hdr[8];
+
 /* Rx Desc */
-#define RX_STATUS_DESC_SIZE				24
-#define RX_DRV_INFO_SIZE_UNIT				8
+#define RX_DESC_SIZE				24
+#define RX_DRV_INFO_SIZE_UNIT			8
 
-/* DWORD 0 */
-#define GET_RX_STATUS_DESC_PKT_LEN(__pdesc)			\
+/* Dword 0 */
+#define GET_RX_DESC_PKT_LEN(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 0, 14)
-#define GET_RX_STATUS_DESC_CRC32(__pdesc)			\
+#define GET_RX_DESC_CRC32(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 14, 1)
-#define GET_RX_STATUS_DESC_ICV(__pdesc)				\
+#define GET_RX_DESC_ICV(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 15, 1)
-#define GET_RX_STATUS_DESC_DRVINFO_SIZE(__pdesc)		\
+#define GET_RX_DESC_DRVINFO_SIZE(__pdesc)			\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 16, 4)
-#define GET_RX_STATUS_DESC_SECURITY(__pdesc)			\
+#define GET_RX_DESC_SECURITY(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 20, 3)
-#define GET_RX_STATUS_DESC_QOS(__pdesc)				\
+#define GET_RX_DESC_QOS(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 23, 1)
-#define GET_RX_STATUS_DESC_SHIFT(__pdesc)			\
+#define GET_RX_DESC_SHIFT(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 24, 2)
-#define GET_RX_STATUS_DESC_PHY_STATUS(__pdesc)			\
+#define GET_RX_DESC_PHY_STATUS(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 26, 1)
-#define GET_RX_STATUS_DESC_SWDEC(__pdesc)			\
+#define GET_RX_DESC_SWDEC(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 27, 1)
-#define GET_RX_STATUS_DESC_LAST_SEG(__pdesc)			\
+#define GET_RX_DESC_LAST_SEG(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 28, 1)
-#define GET_RX_STATUS_DESC_FIRST_SEG(__pdesc)			\
+#define GET_RX_DESC_FIRST_SEG(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 29, 1)
-#define GET_RX_STATUS_DESC_EOR(__pdesc)				\
+#define GET_RX_DESC_EOR(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 30, 1)
-#define GET_RX_STATUS_DESC_OWN(__pdesc)				\
+#define GET_RX_DESC_OWN(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 0, 31, 1)
 
-/* DWORD 1 */
-#define GET_RX_STATUS_DESC_IS_CMD(__pdesc)			\
+/* Dword 1 */
+#define GET_RX_DESC_IS_CMD(__pdesc)				\
 	(SHIFT_AND_MASK_LE(__pdesc, 1, 0, 9) == 0x1ff)
-#define GET_RX_STATUS_DESC_MACID(__pdesc)			\
+#define GET_RX_DESC_MACID(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 0, 5)
-#define GET_RX_STATUS_DESC_TID(__pdesc)				\
+#define GET_RX_DESC_TID(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 5, 4)
-#define GET_RX_STATUS_DESC_PAGGR(__pdesc)			\
+#define GET_RX_DESC_PAGGR(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 14, 1)
-#define GET_RX_STATUS_DESC_FAGGR(__pdesc)			\
+#define GET_RX_DESC_FAGGR(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 15, 1)
-#define GET_RX_STATUS_DESC_A1_FIT(__pdesc)			\
+#define GET_RX_DESC_A1_FIT(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 16, 4)
-#define GET_RX_STATUS_DESC_A2_FIT(__pdesc)			\
+#define GET_RX_DESC_A2_FIT(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 20, 4)
-#define GET_RX_STATUS_DESC_PAM(__pdesc)				\
+#define GET_RX_DESC_PAM(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 24, 1)
-#define GET_RX_STATUS_DESC_PWR(__pdesc)				\
+#define GET_RX_DESC_PWR(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 25, 1)
-#define GET_RX_STATUS_DESC_MORE_DATA(__pdesc)			\
+#define GET_RX_DESC_MORE_DATA(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 26, 1)
-#define GET_RX_STATUS_DESC_MORE_FRAG(__pdesc)			\
+#define GET_RX_DESC_MORE_FRAG(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 27, 1)
-#define GET_RX_STATUS_DESC_TYPE(__pdesc)			\
+#define GET_RX_DESC_TYPE(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 28, 2)
-#define GET_RX_STATUS_DESC_MC(__pdesc)				\
+#define GET_RX_DESC_MC(__pdesc)					\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 30, 1)
-#define GET_RX_STATUS_DESC_BC(__pdesc)				\
+#define GET_RX_DESC_BC(__pdesc)					\
 	SHIFT_AND_MASK_LE(__pdesc, 1, 31, 1)
 
-/* DWORD 2 */
-#define GET_RX_STATUS_DESC_SEQ(__pdesc)				\
+/* Dword 2 */
+#define GET_RX_DESC_SEQ(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 2, 0, 12)
-#define GET_RX_STATUS_DESC_FRAG(__pdesc)			\
+#define GET_RX_DESC_FRAG(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 2, 12, 4)
-#define GET_RX_STATUS_DESC_PKTCNT(__pdesc)			\
+#define GET_RX_DESC_PKTCNT(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 2, 16, 8)
 
-/* DWORD 3 */
-#define GET_RX_STATUS_DESC_RX_MCS(__pdesc)			\
+/* Dword 3 */
+#define GET_RX_DESC_RX_MCS(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 3, 0, 6)
-#define GET_RX_STATUS_DESC_RX_HT(__pdesc)			\
+#define GET_RX_DESC_RX_HT(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 3, 6, 1)
-#define GET_RX_STATUS_DESC_SPLCP(__pdesc)			\
+#define GET_RX_DESC_SPLCP(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 3, 8, 1)
-#define GET_RX_STATUS_DESC_BW(__pdesc)				\
+#define GET_RX_DESC_BW(__pdesc)					\
 	SHIFT_AND_MASK_LE(__pdesc, 3, 9, 1)
-#define GET_RX_STATUS_DESC_TCP_CHK_RPT(__pdesc)			\
+#define GET_RX_DESC_TCP_CHK_RPT(__pdesc)			\
 	SHIFT_AND_MASK_LE(__pdesc, 3, 11, 1)
-#define GET_RX_STATUS_DESC_IP_CHK_RPT(__pdesc)			\
+#define GET_RX_DESC_IP_CHK_RPT(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 3, 12, 1)
-#define GET_RX_STATUS_DESC_TCP_CHK_VALID(__pdesc)		\
+#define GET_RX_DESC_TCP_CHK_VALID(__pdesc)			\
 	SHIFT_AND_MASK_LE(__pdesc, 3, 13, 1)
 
-/* DWORD 5 */
-#define SET_RX_STATUS_DESC_TSFL(__pdesc, __val)			\
-	SET_BITS_OFFSET_LE(__pdesc, 5, 0, 32, __val)
-#define GET_RX_STATUS_DESC_TSFL(__pdesc)			\
+/* Dword 5 */
+#define GET_RX_DESC_TSFL(__pdesc)				\
 	SHIFT_AND_MASK_LE(__pdesc, 5, 0, 32)
 
-typedef __le32 tx_hdr[8];
-
-/* Rx Desc */
-#define RX_DESC_SIZE				24
-#define RX_DRV_INFO_SIZE_UNIT			8
-
 typedef __le32 rx_hdr[6];
 
 struct rx_hdr_phy_cck {
--- a/drivers/net/wireless/r92su/rx.c
+++ b/drivers/net/wireless/r92su/rx.c
@@ -70,21 +70,21 @@ static void r92su_rx_add_radiotap(struct
 	while ((pos - (u8 *)rthdr) & 7)
 		*pos++ = 0;
 
-	put_unaligned_le64(GET_RX_STATUS_DESC_TSFL(rx_hdr), pos);
+	put_unaligned_le64(GET_RX_DESC_TSFL(rx_hdr), pos);
 	pos += 8;
 
 	/* IEEE80211_RADIOTAP_FLAGS */
 	*pos = IEEE80211_RADIOTAP_F_FCS;
-	if (GET_RX_STATUS_DESC_CRC32(rx_hdr))
+	if (GET_RX_DESC_CRC32(rx_hdr))
 		*pos |= IEEE80211_RADIOTAP_F_BADFCS;
-	if (GET_RX_STATUS_DESC_SPLCP(rx_hdr))
+	if (GET_RX_DESC_SPLCP(rx_hdr))
 		*pos |= IEEE80211_RADIOTAP_F_SHORTPRE;
 	pos++;
 
-	rx_mcs = GET_RX_STATUS_DESC_RX_MCS(rx_hdr);
+	rx_mcs = GET_RX_DESC_RX_MCS(rx_hdr);
 
 	/* IEEE80211_RADIOTAP_RATE */
-	ht = GET_RX_STATUS_DESC_RX_HT(rx_hdr);
+	ht = GET_RX_DESC_RX_HT(rx_hdr);
 	if (ht) {
 		/* Without rate information don't add it. If we have,
 		 * MCS information is a separate field in radiotap,
@@ -127,13 +127,13 @@ static void r92su_rx_add_radiotap(struct
 		*pos++ = IEEE80211_RADIOTAP_MCS_HAVE_MCS |
 			 IEEE80211_RADIOTAP_MCS_HAVE_BW;
 		*pos = 0;
-		if (GET_RX_STATUS_DESC_BW(rx_hdr))
+		if (GET_RX_DESC_BW(rx_hdr))
 			*pos |= IEEE80211_RADIOTAP_MCS_BW_40;
 		pos++;
 		*pos++ = rx_mcs;
 	}
 
-	if (GET_RX_STATUS_DESC_PAGGR(rx_hdr)) {
+	if (GET_RX_DESC_PAGGR(rx_hdr)) {
 		u16 flags = 0;
 
 		/* ensure 4 byte alignment */
@@ -143,7 +143,7 @@ static void r92su_rx_add_radiotap(struct
 		rthdr->it_present |=
 			cpu_to_le32(1 << IEEE80211_RADIOTAP_AMPDU_STATUS);
 
-		if (GET_RX_STATUS_DESC_FAGGR(rx_hdr))
+		if (GET_RX_DESC_FAGGR(rx_hdr))
 			r92su->ampdu_reference++;
 
 		put_unaligned_le32(r92su->ampdu_reference, pos);
@@ -175,10 +175,10 @@ static unsigned int r92su_rx_calc_radiot
 	/* padding for RX_FLAGS if necessary */
 	rtap_len = ALIGN(rtap_len, 2);
 
-	if (GET_RX_STATUS_DESC_RX_HT(rx_hdr))
+	if (GET_RX_DESC_RX_HT(rx_hdr))
 		rtap_len += 3;
 
-	if (GET_RX_STATUS_DESC_PAGGR(rx_hdr)) {
+	if (GET_RX_DESC_PAGGR(rx_hdr)) {
 		rtap_len = ALIGN(rtap_len, 4);
 		rtap_len += 8;
 	}
@@ -612,12 +612,12 @@ r92su_rx_hw_header_check(struct r92su *r
 	hdr = (struct ieee80211_hdr *) skb->data;
 
 	/* filter out frames with bad fcs... if they did end up here */
-	if (GET_RX_STATUS_DESC_CRC32(&rx->hdr))
+	if (GET_RX_DESC_CRC32(&rx->hdr))
 		return RX_DROP;
 
 	has_protect = ieee80211_has_protected(hdr->frame_control);
 
-	if (has_protect && GET_RX_STATUS_DESC_SWDEC(&rx->hdr)) {
+	if (has_protect && GET_RX_DESC_SWDEC(&rx->hdr)) {
 		wiphy_err(r92su->wdev.wiphy, "hw didn't decipher frame.\n");
 		return RX_DROP;
 	}
@@ -1093,7 +1093,7 @@ static void r92su_rx_tasklet(unsigned lo
 		unsigned int drvinfo_size;
 
 		rx = (struct rx_packet *) skb->data;
-		drvinfo_size = GET_RX_STATUS_DESC_DRVINFO_SIZE(&rx->hdr);
+		drvinfo_size = GET_RX_DESC_DRVINFO_SIZE(&rx->hdr);
 		hdr = (struct ieee80211_hdr *) skb_pull(skb,
 			RX_DESC_SIZE + drvinfo_size * 8);
 		switch (r92su->wdev.iftype) {
@@ -1130,23 +1130,23 @@ void r92su_rx(struct r92su *r92su, void
 		RTL92SU_SIZE_MAX_RX_BUFFER - RX_DESC_SIZE);
 
 	/* pkt_cnt seems to be valid only for the first aggregated packet?! */
-	pkt_cnt = GET_RX_STATUS_DESC_PKTCNT(rx->hdr);
+	pkt_cnt = GET_RX_DESC_PKTCNT(rx->hdr);
 	pkt_cnt = max_t(unsigned int, pkt_cnt, 1);
 
 	while (buf < end && pkt_cnt--) {
 		unsigned int drvinfo, shift;
 		rx = (struct rx_packet *) buf;
 
-		drvinfo = GET_RX_STATUS_DESC_DRVINFO_SIZE(&rx->hdr) *
+		drvinfo = GET_RX_DESC_DRVINFO_SIZE(&rx->hdr) *
 			RX_DRV_INFO_SIZE_UNIT;
-		shift = GET_RX_STATUS_DESC_SHIFT(&rx->hdr);
-		pkt_len = GET_RX_STATUS_DESC_PKT_LEN(&rx->hdr);
+		shift = GET_RX_DESC_SHIFT(&rx->hdr);
+		pkt_len = GET_RX_DESC_PKT_LEN(&rx->hdr);
 		hdr_len = RX_DESC_SIZE + drvinfo;
 
 		if (buf + pkt_len + hdr_len + shift > end)
 			goto err_garbage;
 
-		if (GET_RX_STATUS_DESC_IS_CMD(&rx->hdr)) {
+		if (GET_RX_DESC_IS_CMD(&rx->hdr)) {
 			if (len - sizeof(rx->hdr) <
 			    le16_to_cpu(rx->c2h.len) + sizeof(rx->c2h)) {
 				wiphy_err(r92su->wdev.wiphy, "received clipped c2h command.");
