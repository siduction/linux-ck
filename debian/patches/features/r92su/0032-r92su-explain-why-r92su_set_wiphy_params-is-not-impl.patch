From b553b1dbbe9295e197e49a300bbb898acebb6b5a Mon Sep 17 00:00:00 2001
From: Christian Lamparter <chunkeey@googlemail.com>
Date: Tue, 9 Apr 2013 16:00:42 +0200
Subject: [PATCH 32/65] r92su: explain why r92su_set_wiphy_params is not
 implemented

Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
---
 r92su/main.c | 40 +++++++++++++++++++++-------------------
 r92su/tx.c   |  8 +++++++-
 2 files changed, 28 insertions(+), 20 deletions(-)

--- a/drivers/net/wireless/r92su/main.c
+++ b/drivers/net/wireless/r92su/main.c
@@ -923,25 +923,25 @@ out:
 
 static int r92su_set_wiphy_params(struct wiphy *wiphy, u32 changed)
 {
-	struct r92su *r92su = wiphy_priv(wiphy);
-
-	if (changed & WIPHY_PARAM_FRAG_THRESHOLD) {
-		/* For some reason, the firmware increases the sequence
-		 * counter for fragments. This breaks the defragmentation
-		 * on the receiver because all fragments have to have the
-		 * same sequence couter.
-		 */
-		WARN_ONCE(1, "fragmentation is not supported");
-
-		/* for now, reset fragmentation threshold. However, once the
-		 * fragmentation bug get fixed, this can be removed altogether
-		 + and "everything should just work (tm)".
-		 */
-	//	r92su->wdev.wiphy->frag_threshold =
-	//		IEEE80211_MAX_FRAG_THRESHOLD;
-		return 0;
-	} else
-		return -EOPNOTSUPP;
+	/* WIPHY_PARAM_FRAG_THRESHOLD
+	 *	For some reason, the firmware increases the sequence
+	 *	counter for fragments. This breaks the defragmentation
+	 *	on the receiver because all fragments have to have the
+	 *	same sequence couter.
+	 *
+	 *	for now, reset fragmentation threshold. However, once the
+	 *	fragmentation bug get fixed, this can be removed altogether
+	 *	and "everything should just work (tm)".
+	 *
+	 * WIPHY_PARAM_RTS_THRESHOLD
+	 *	Not implemented in the vendor driver. Apparently, the
+	 *	firmware will automatically enable RTS "when needed (tm)".
+	 *
+	 * WIPHY_PARAMS_RETRY_SHORT
+	 * WIPHY_PARAMS_RETRY_LONG
+	 *	Controlled by the firmware.
+	 */
+	return -EOPNOTSUPP;
 }
 
 static int r92su_ibss_build_ie(struct r92su *r92su, u8 **ie, u32 *ie_len_left,
@@ -1282,6 +1282,8 @@ static int r92su_open(struct net_device
 	/* uploading the firmware resets the c2h and h2c command counters */
 	r92su_cmd_init(r92su);
 
+	r92su_cmd_init(r92su);
+
 	err = r92su_hw_late_mac_setup(r92su);
 	if (err)
 		goto out;
--- a/drivers/net/wireless/r92su/tx.c
+++ b/drivers/net/wireless/r92su/tx.c
@@ -402,13 +402,19 @@ r92su_tx_fragment(struct r92su *r92su, s
 		  struct r92su_bss_priv *bss_priv, struct sk_buff_head *queue)
 {
 	struct ieee80211_hdr *hdr;
-	unsigned int limit = r92su->wdev.wiphy->frag_threshold;
+	unsigned int limit;
 	unsigned int hdr_len;
 	unsigned int frag_num = 0;
 	unsigned int per_frag;
 	unsigned int pos;
 	int rem;
 
+	limit = IEEE80211_MAX_FRAG_THRESHOLD;
+	/* once the firmware supports fragmentation...
+	 * enable this:
+	 * 	limit = r92su->wdev.wiphy->frag_threshold;
+	 */
+
 	if ((skb->len + FCS_LEN) < limit) {
 		__skb_queue_tail(queue, skb);
 		return TX_CONTINUE;
