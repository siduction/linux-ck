From 470b595566f9ef322f533fc8207fe285e2405cb6 Mon Sep 17 00:00:00 2001
From: Christian Lamparter <chunkeey@googlemail.com>
Date: Sun, 7 Apr 2013 02:11:06 +0200
Subject: [PATCH 23/65] r92su: disable ht if device does not support it

Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
---
 r92su/fw.c    | 13 +++----------
 r92su/main.c  |  5 +++++
 r92su/r92su.h |  1 +
 r92su/tx.c    |  3 ++-
 r92su/usb.c   | 23 +++++++++++++----------
 5 files changed, 24 insertions(+), 21 deletions(-)

--- a/drivers/net/wireless/r92su/fw.c
+++ b/drivers/net/wireless/r92su/fw.c
@@ -97,26 +97,19 @@ static int r92su_prepare_firmware(struct
 	 */
 	r92su_usb_prepare_firmware(r92su);
 
-	dmem->bw_40mhz_en = 1;
-
 	dmem->mp_mode = 0; /* what's mp mode? multi-peer? mesh portal? */
 	dmem->qos_en = 1;
-	dmem->ampdu_en = 1;
+	dmem->bw_40mhz_en = !r92su->disable_ht;
+	dmem->ampdu_en = !r92su->disable_ht;
+	dmem->aggregation_offload = !r92su->disable_ht;
 	dmem->rate_control_offload = 1;
-	dmem->aggregation_offload = 1;
 	dmem->mlme_offload = 1;
 	dmem->vcs_type = 2; /* 0: off, 1: on, 2: auto */
 	dmem->vcs_mode = 1; /* 0: off(presumably), 1:RTS/CTS, 2:CTS-Self */
 
-	/* F/W will issue two probe request. One is with ssid ( if exists ),
-	 * another is with the wildcard ssid.
-	 */
-	dmem->rsvd024 = 1;
-
 	dmem->turbo_mode = 0;
 	dmem->low_power_mode = 0;
 	dmem->chip_version = r92su->chip_rev; /* not necessarily correct ?! */
-	dmem->usb_ep_num = 0x4;	/* 4 eps */
 	dmem->rf_config = r92su->rf_type;
 
 	/* When scanning, send out two probe requests.
--- a/drivers/net/wireless/r92su/main.c
+++ b/drivers/net/wireless/r92su/main.c
@@ -216,6 +216,9 @@ static bool r92su_ht_update(struct r92su
 	struct ieee80211_ht_cap ht_cap = { };
 	struct ieee80211_sta_ht_cap *me_ht;
 
+	if (r92su->disable_ht)
+		return true;
+
 	me_ht = &r92su->band_2GHZ.ht_cap;
 
 	ht_cap.cap_info = cpu_to_le16(me_ht->cap);
@@ -1408,6 +1411,8 @@ static int r92su_init_band(struct r92su
 	band->n_bitrates = ARRAY_SIZE(r92su_ratetable);
 
 	memcpy(&band->ht_cap, &r92su_ht_info, sizeof(r92su_ht_info));
+	band->ht_cap.ht_supported = !r92su->disable_ht;
+
 	switch (r92su->rf_type) {
 	case R92SU_1T1R:
 		/* nothing needs to be done. The default ht_cap
--- a/drivers/net/wireless/r92su/r92su.h
+++ b/drivers/net/wireless/r92su/r92su.h
@@ -189,6 +189,7 @@ struct r92su {
 	u16 fw_version;
 	struct fw_priv fw_dmem;
 	bool fw_loaded;
+	bool disable_ht;
 
 	/* wps pbc button */
 	struct input_dev *wps_pbc;
--- a/drivers/net/wireless/r92su/tx.c
+++ b/drivers/net/wireless/r92su/tx.c
@@ -382,7 +382,8 @@ r92su_tx_add_80211(struct r92su *r92su,
 		qos_ctl[0] = tid;
 
 		if (tx_info->ht_possible && !tx_info->low_rate &&
-		    skb_get_queue_mapping(skb) != IEEE80211_AC_VO) {
+		    skb_get_queue_mapping(skb) != IEEE80211_AC_VO &&
+		    !r92su->disable_ht) {
 			if (!bss_priv->tx_tid[tid].addba_issued) {
 				r92su_h2c_start_ba(r92su, tid);
 				bss_priv->tx_tid[tid].addba_issued = true;
--- a/drivers/net/wireless/r92su/usb.c
+++ b/drivers/net/wireless/r92su/usb.c
@@ -395,7 +395,8 @@ static int r92su_usb_init(struct r92su *
 	return err;
 }
 
-#define USB_VENDER_ID_REALTEK		0x0bda
+#define DISABLE_HT	BIT(0)
+
 static struct usb_device_id r92su_usb_product_ids[] = {
 	/* RTL8188SU */
 	/* Realtek */
@@ -408,14 +409,14 @@ static struct usb_device_id r92su_usb_pr
 	{USB_DEVICE(0x07B8, 0x8188)},
 	/* ASUS */
 	{USB_DEVICE(0x0B05, 0x1786)},
-	{USB_DEVICE(0x0B05, 0x1791)}, /* 11n mode disable */
+	{USB_DEVICE(0x0B05, 0x1791), .driver_info = DISABLE_HT },
 	/* Belkin */
 	{USB_DEVICE(0x050D, 0x945A)},
 	/* Corega */
 	{USB_DEVICE(0x07AA, 0x0047)},
 	/* D-Link */
 	{USB_DEVICE(0x2001, 0x3306)},
-	{USB_DEVICE(0x07D1, 0x3306)}, /* 11n mode disable */
+	{USB_DEVICE(0x07D1, 0x3306), .driver_info = DISABLE_HT },
 	/* Edimax */
 	{USB_DEVICE(0x7392, 0x7611)},
 	/* EnGenius */
@@ -433,7 +434,7 @@ static struct usb_device_id r92su_usb_pr
 	/* Sitecom */
 	{USB_DEVICE(0x0DF6, 0x0057)},
 	{USB_DEVICE(0x0DF6, 0x0045)},
-	{USB_DEVICE(0x0DF6, 0x0059)}, /* 11n mode disable */
+	{USB_DEVICE(0x0DF6, 0x0059), .driver_info = DISABLE_HT },
 	{USB_DEVICE(0x0DF6, 0x004B)},
 	{USB_DEVICE(0x0DF6, 0x005B)},
 	{USB_DEVICE(0x0DF6, 0x005D)},
@@ -456,13 +457,13 @@ static struct usb_device_id r92su_usb_pr
 	{USB_DEVICE(0x0EB0, 0x9061)},
 	/* ASUS/EKB */
 	{USB_DEVICE(0x13D3, 0x3323)},
-	{USB_DEVICE(0x13D3, 0x3311)}, /* 11n mode disable */
+	{USB_DEVICE(0x13D3, 0x3311), .driver_info = DISABLE_HT },
 	{USB_DEVICE(0x13D3, 0x3342)},
 	/* ASUS/EKBLenovo */
 	{USB_DEVICE(0x13D3, 0x3333)},
 	{USB_DEVICE(0x13D3, 0x3334)},
-	{USB_DEVICE(0x13D3, 0x3335)}, /* 11n mode disable */
-	{USB_DEVICE(0x13D3, 0x3336)}, /* 11n mode disable */
+	{USB_DEVICE(0x13D3, 0x3335), .driver_info = DISABLE_HT },
+	{USB_DEVICE(0x13D3, 0x3336), .driver_info = DISABLE_HT },
 	/* ASUS/Media BOX */
 	{USB_DEVICE(0x13D3, 0x3309)},
 	/* Belkin */
@@ -498,8 +499,8 @@ static struct usb_device_id r92su_usb_pr
 	{USB_DEVICE(0x04F2, 0xAFF5)},
 	{USB_DEVICE(0x04F2, 0xAFF6)},
 	{USB_DEVICE(0x13D3, 0x3339)},
-	{USB_DEVICE(0x13D3, 0x3340)}, /* 11n mode disable */
-	{USB_DEVICE(0x13D3, 0x3341)}, /* 11n mode disable */
+	{USB_DEVICE(0x13D3, 0x3340), .driver_info = DISABLE_HT },
+	{USB_DEVICE(0x13D3, 0x3341), .driver_info = DISABLE_HT },
 	{USB_DEVICE(0x13D3, 0x3310)},
 	{USB_DEVICE(0x13D3, 0x3325)},
 
@@ -535,6 +536,9 @@ static int r92su_usb_probe(struct usb_in
 		goto err_out;
 	}
 
+	if (id->driver_info & DISABLE_HT)
+		r92su->disable_ht = true;
+
 	r92su_set_state(r92su, R92SU_PROBE);
 
 	r92su->udev = interface_to_usbdev(intf);
@@ -617,4 +621,3 @@ MODULE_DEVICE_TABLE(usb, r92su_usb_produ
 MODULE_FIRMWARE(RTL8192SU_FIRMWARE);
 MODULE_AUTHOR("Christian Lamparter <chunkeey@googlemail.com>");
 MODULE_LICENSE("GPL");
-
